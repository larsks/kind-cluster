---
# Source: step-certificates/templates/bootstrap.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: step-certificates-config
  namespace: step-certificates
  labels:
    helm.sh/chart: step-certificates-1.18.2_20220324
    app.kubernetes.io/name: step-certificates
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "0.18.2"
    app.kubernetes.io/managed-by: Helm
---
# Source: step-certificates/templates/secrets.yaml
# Secrets that will be updated by the configuration job: 
# 1. CA keys password.
# 2. Provisioner password.
apiVersion: v1
kind: Secret
type: smallstep.com/ca-password
metadata:
  name: step-certificates-ca-password
  namespace: step-certificates
data:
  password: SECRET
---
# Source: step-certificates/templates/secrets.yaml
apiVersion: v1
kind: Secret
type: smallstep.com/provisioner-password
metadata:
  name: step-certificates-provisioner-password
  namespace: step-certificates
data:
  password: SECRET
---
# Source: step-certificates/templates/secrets.yaml
---
apiVersion: v1
kind: Secret
type: smallstep.com/private-keys
metadata:
  name: step-certificates-secrets
  namespace: step-certificates
stringData:
  intermediate_ca_key: |-
    INTERMEDIATE CA KEY
  root_ca_key: |-
    ROOT CA KEY
---
# Source: step-certificates/templates/configmaps.yaml
# ConfigMaps that will be updated by the configuration job: 
# 1. Step CA config directory.
# 2. Step CA certs direcotry.
# 3. Step CA secrets directory.
apiVersion: v1
kind: ConfigMap
metadata:
  name: step-certificates-config
  namespace: step-certificates
  labels:
    helm.sh/chart: step-certificates-1.18.2_20220324
    app.kubernetes.io/name: step-certificates
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "0.18.2"
    app.kubernetes.io/managed-by: Helm
data:
  ca.json: |
    {
      "address": ":9000",
      "authority": {
        "claims": {
          "defaultHostSSHCertDuration": "720h",
          "defaultTLSCertDuration": "24h",
          "defaultUserSSHCertDuration": "24h",
          "disableRenewal": false,
          "maxHostSSHCertDuration": "1680h",
          "maxTLSCertDuration": "24h",
          "maxUserSSHCertDuration": "24h",
          "minHostSSHCertDuration": "5m",
          "minTLSCertDuration": "5m",
          "minUserSSHCertDuration": "5m"
        },
        "provisioners": []
      },
      "crt": "/home/step/certs/intermediate_ca.crt",
      "db": {
        "dataSource": "/home/step/db",
        "type": "badgerv2"
      },
      "dnsNames": [
        "localhost"
      ],
      "federateRoots": [],
      "key": "/home/step/secrets/intermediate_ca_key",
      "logger": {
        "format": "json"
      },
      "root": "/home/step/certs/root_ca.crt",
      "tls": {
        "cipherSuites": [
          "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
          "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
        ],
        "maxVersion": 1.3,
        "minVersion": 1.2,
        "renegotiation": false
      }
    }
  defaults.json: |
    {
      "ca-config": "/home/step/config/ca.json",
      "ca-url": "https://localhost",
      "fingerprint": "ROOT CA FINGERPRINT",
      "root": "/home/step/certs/root_ca.crt"
    }
  ssh.tpl: |
    {
      "type": {{ toJson .Type }},
      "keyId": {{ toJson .KeyID }},
      "principals": {{ toJson .Principals }},
      "extensions": {{ toJson .Extensions }},
      "criticalOptions": {{ toJson .CriticalOptions }}
    }
    
  x509_leaf.tpl: |
    {
      "subject": {{ toJson .Subject }},
      "sans": {{ toJson .SANs }},
    {{- if typeIs "*rsa.PublicKey" .Insecure.CR.PublicKey }}
      "keyUsage": ["keyEncipherment", "digitalSignature"],
    {{- else }}
      "keyUsage": ["digitalSignature"],
    {{- end }}
      "extKeyUsage": ["serverAuth", "clientAuth"]
    }
---
# Source: step-certificates/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: step-certificates-certs
  namespace: step-certificates
  labels:
    helm.sh/chart: step-certificates-1.18.2_20220324
    app.kubernetes.io/name: step-certificates
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "0.18.2"
    app.kubernetes.io/managed-by: Helm
data:
  intermediate_ca.crt: |-
    INTERMEDIATE CA CERT
  root_ca.crt: |-
    ROOT CA CERT
---
# Source: step-certificates/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: step-certificates-config
  namespace: step-certificates
  labels:
    helm.sh/chart: step-certificates-1.18.2_20220324
    app.kubernetes.io/name: step-certificates
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.18.2
rules:
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "create", "update", "patch"]
---
# Source: step-certificates/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: step-certificates-config
  namespace: step-certificates
  labels:
    helm.sh/chart: step-certificates-1.18.2_20220324
    app.kubernetes.io/name: step-certificates
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: 0.18.2
subjects:
- kind: ServiceAccount
  name: step-certificates-config
  namespace: step-certificates
roleRef:
  kind: Role
  name: step-certificates-config
  apiGroup: rbac.authorization.k8s.io
---
# Source: step-certificates/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: step-certificates
  namespace: step-certificates
  labels:
    helm.sh/chart: step-certificates-1.18.2_20220324
    app.kubernetes.io/name: step-certificates
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "0.18.2"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 9000
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: step-certificates
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: step-certificates/templates/ca.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: step-certificates
  namespace: step-certificates
  labels:
    helm.sh/chart: step-certificates-1.18.2_20220324
    app.kubernetes.io/name: step-certificates
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/version: "0.18.2"
    app.kubernetes.io/managed-by: Helm
spec:
  # Only one replica is supported at this moment
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: step-certificates
      app.kubernetes.io/instance: RELEASE-NAME
  serviceName: step-certificates
  template:
    metadata:
      labels:
        app.kubernetes.io/name: step-certificates
        app.kubernetes.io/instance: RELEASE-NAME
      annotations:
        checksum/config: e7e006669b80610a3d5d770cae526d7926aa9e9f521c5b9501a0747d786bd421
        checksum/secret: 873f6f62602b9732a77bfcdf15a1103c4f7e50e335556a3f66a75fc19f9c5189
    spec:
      securityContext:
        runAsUser: 1000
        runAsNonRoot: true
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: step-certificates
          image: "cr.step.sm/smallstep/step-ca:0.18.2"
          imagePullPolicy: IfNotPresent
          command: [
            "/usr/local/bin/step-ca",
            "--password-file", "/home/step/secrets/passwords/password",
            "/home/step/config/ca.json"
          ]
          env:
          - name: NAMESPACE
            value: "step-certificates"
          ports:
            - name: https
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /health
              port: 9000
              scheme: HTTPS
          readinessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /health
              port: 9000
              scheme: HTTPS
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
          - name: certs
            mountPath: /home/step/certs
            readOnly: true
          - name: config
            mountPath: /home/step/config
            readOnly: true
          - name: secrets
            mountPath: /home/step/secrets
            readOnly: true
          - name: ca-password
            mountPath: /home/step/secrets/passwords
            readOnly: true
          - name: database
            mountPath: /home/step/db
            readOnly: false
      volumes:
      - name: certs
        configMap:
          name: step-certificates-certs
      - name: config
        configMap:
          name: step-certificates-config
      - name: secrets
        secret:
          secretName: step-certificates-secrets
      - name: ca-password
        secret:
          secretName: step-certificates-ca-password
  volumeClaimTemplates:
  - metadata:
      name: database
      labels:
        app.kubernetes.io/name: step-certificates
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "10Gi"
---
# Source: step-certificates/templates/configmaps.yaml
---
---
# Source: step-certificates/templates/rbac.yaml
# if .Values.autocert.enabled
---
# Source: step-certificates/templates/secrets.yaml
---
